{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    // const config = {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-type': 'application/json',\n    //         Authorization: `Bearer ${userInfo.token}`\n    //     },\n    //     body: JSON.stringify(order)\n    // };\n\n    // const response = await fetch('/api/orders/add/', config);\n    // const data = await response.json();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    if (response.ok) {\n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data\n      });\n    } else {\n      throw new Error(data.message);\n    }\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","axios","post","response","ok","payload","Error","message","error"],"sources":["/Users/jung-yechan/Documents/coding/re/drjeaancgto/fe/src/actions/orderActions.js"],"sourcesContent":["import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        // const config = {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-type': 'application/json',\n        //         Authorization: `Bearer ${userInfo.token}`\n        //     },\n        //     body: JSON.stringify(order)\n        // };\n\n        // const response = await fetch('/api/orders/add/', config);\n        // const data = await response.json();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        if (response.ok) {\n            dispatch({\n                type: ORDER_CREATE_SUCCESS,\n                payload: data,\n            });\n        } else {\n            throw new Error(data.message);\n        }\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.message,\n        });\n    }\n}"],"mappings":"AAAA,SACIA,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,QACd,6BAA6B;AAEpC,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAChE,IAAI;IACAD,QAAQ,CAAC;MACLE,IAAI,EAAEP;IACV,CAAC,CAAC;IAEF,MAAM;MACFQ,SAAS,EAAE;QAAEC;MAAS;IAC1B,CAAC,GAAGH,QAAQ,CAAC,CAAC;;IAEd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC5C;IACJ,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACC,IAAI,CAC5B,kBAAiB,EAClBZ,KAAK,EACLM,MACJ,CAAC;IAED,IAAIO,QAAQ,CAACC,EAAE,EAAE;MACbb,QAAQ,CAAC;QACLE,IAAI,EAAEN,oBAAoB;QAC1BkB,OAAO,EAAEL;MACb,CAAC,CAAC;IACN,CAAC,MAAM;MACH,MAAM,IAAIM,KAAK,CAACN,IAAI,CAACO,OAAO,CAAC;IACjC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZjB,QAAQ,CAAC;MACLE,IAAI,EAAEL,iBAAiB;MACvBiB,OAAO,EAAEG,KAAK,CAACD;IACnB,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}