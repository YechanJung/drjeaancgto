{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"/api/users/login/\", {\n      method: \"POST\",\n      headers: config.headers,\n      body: JSON.stringify({\n        'username': email,\n        'password': password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: data && data.message ? data.message : \"Login failed\"\n      });\n    }\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"/api/users/register/\", {\n      method: \"POST\",\n      headers: config.headers,\n      body: JSON.stringify({\n        'name': name,\n        'email': email,\n        'password': password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data\n      });\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } else {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: data && data.message ? data.message : \"Registration failed\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","login","email","password","dispatch","type","config","headers","response","fetch","method","body","JSON","stringify","data","json","ok","payload","message","localStorage","setItem","error","logout","removeItem","register","name"],"sources":["/Users/jung-yechan/Documents/coding/re/drjeaancgto/fe/src/actions/userActions.js"],"sourcesContent":["import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS\n} from \"../constants/userConstants\";\n\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        const response = await fetch(\n            \"/api/users/login/\",\n            {\n                method: \"POST\",\n                headers: config.headers,\n                body: JSON.stringify({ 'username':email, 'password':password }),\n            }\n        );\n\n        const data = await response.json();\n\n        if (response.ok) {\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data,\n            });\n        } else {\n            dispatch({\n                type: USER_LOGIN_FAIL,\n                payload:\n                    data && data.message ? data.message : \"Login failed\",\n            });\n        }\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        const response = await fetch(\n            \"/api/users/register/\",\n            {\n                method: \"POST\",\n                headers: config.headers,\n                body: JSON.stringify({ 'name':name, 'email':email, 'password':password }),\n            }\n        );\n\n        const data = await response.json();\n\n        if (response.ok) {\n            dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data,\n            });\n\n            dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data,\n            });\n\n            localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        } else {\n            dispatch({\n                type: USER_REGISTER_FAIL,\n                payload:\n                    data && data.message ? data.message : \"Registration failed\",\n            });\n        }\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}